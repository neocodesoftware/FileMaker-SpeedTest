
     _   _             _____          _           
    | \ | |           / ____|        | |          
    |  \| | ___  ___ | |     ___   __| | ___      
    | . ` |/ _ \/ _ \| |    / _ \ / _` |/ _ \     
    | |\  |  __/ (_) | |___| (_) | (_| |  __/     
    |_| \_|\___|\___/ \_____\___/ \__,_|\___|     
   _____                     _ _______        _   
  / ____|                   | |__   __|      | |  
 | (___  _ __   ___  ___  __| |  | | ___  ___| |_ 
  \___ \| '_ \ / _ \/ _ \/ _` |  | |/ _ \/ __| __|
  ____) | |_) |  __/  __/ (_| |  | |  __/\__ \ |_ 
 |_____/| .__/ \___|\___|\__,_|  |_|\___||___/\__|
        | |                                       
        |_|                                       		
		
== NeoCode SpeedTest
Standard test suite to put FileMaker client and server through record creation, deletion, indexing etc.

== Why do you need this?
* tool to test speed of filemaker hardware and network independent of any applications
* compare different hardware
* compare different networks
* compare different filemaker versions
 
== Requirements
    FileMaker Server 12 or greater
    FileMaker Server 14 recommended

== Installation
    Upload NeoCode_SpeedTest.fmp12 to your server

== Credentials
Admin user can run the test and check the results
  login: admin
  password: admin
  
Test user can only run the test.
  login: user
  password: user

== Usage
1 Upload file to server

2 Login as test user with user / user

3 Create a new test

4 Specify 100 records to test

5 Run test

6 Wait

7 Review results by clicking List button

== TO DO
1 scheduled tests

2 set target test results and alert if over

== Complete Test suite
1 Insert records with random integer values

2 Update records with random integer values

3 Perform Find

4 Sort records with integer values

5 Delete records

6 Insert records with random string values

7 Perform find in portal

8 Sort records with string values

9 Sort records with string values and replace fields' contents

10 Sort indexed records with string values and replace fields' contents

== Test results
Test scripts are performed on client and on server.

Application architecture and version, host version are stored together with the results for future analysis.

Additionally min, average and max test results are calculated and shown on result page.
